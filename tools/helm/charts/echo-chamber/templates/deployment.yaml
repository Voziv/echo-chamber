apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "echo-chamber.fullname" . }}
  labels:
{{ include "echo-chamber.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "echo-chamber.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "web-server"
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/app-config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/app-secrets.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ include "echo-chamber.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "web-server"
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}-nginx
          image: "{{ .Values.web.webImage.repository }}:{{ .Values.web.webImage.tag }}"
          imagePullPolicy: {{ .Values.web.webImage.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /.health/liveness
              port: http
          readinessProbe:
            httpGet:
              path: /.health/readiness
              port: http
          resources:
              {{- toYaml .Values.web.resources | nindent 12 }}
        - name: {{ .Chart.Name }}-app
          image: "{{ .Values.web.appImage.repository }}:{{ .Values.web.appImage.tag }}"
          imagePullPolicy: {{ .Values.web.appImage.pullPolicy }}
          ports:
            - name: phpfpm
              containerPort: 9000
          readinessProbe:
            tcpSocket:
              port: phpfpm
          resources:
                {{- toYaml .Values.web.resources | nindent 12 }}
          env:
            - name: CONTAINER_ROLE
              value: 'app'
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-app-config
            - secretRef:
                name: {{ .Release.Name }}-app-secrets
            {{- with .Values.web.nodeSelector }}
      nodeSelector:
            {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.web.affinity }}
      affinity:
            {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.web.tolerations }}
      tolerations:
          {{- toYaml . | nindent 8 }}
        {{- end }}
