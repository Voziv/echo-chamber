FROM echo-chamber-app-composer:latest as composer_build
FROM php:7.4.0RC4-fpm-alpine3.10

####################
# Install extensions
####################
RUN set -eux; \
        apk add --no-cache --virtual .build-deps \
            ${PHPIZE_DEPS} \
            # For redis
            pcre-dev; \
        \
        pecl install redis; \
        rm -rf /tmp/pear; \
        docker-php-ext-enable redis; \
        \
        docker-php-ext-install \
            pdo pdo_mysql mysqli; \
        docker-php-ext-enable \
            pdo pdo_mysql mysqli; \
        \
        apk del --no-network .build-deps;

COPY . /var/www/app
WORKDIR /var/www/app
COPY --from=composer_build /var/www/build/vendor /var/www/app/vendor
COPY --from=composer_build --chown=www-data:www-data /var/www/build/bootstrap/cache /var/www/app/bootstrap/cache

RUN set -eux; \
        mkdir -p storage/app; \
        mkdir -p storage/framework/cache; \
        mkdir -p storage/framework/sessions; \
        mkdir -p storage/framework/testing; \
        mkdir -p storage/framework/views; \
        mkdir -p storage/logs; \
        chown -R www-data:www-data /var/www/app/storage; \
        \
        mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"; \
        rm .env; \
        rm -rf tools;

# Override php pool settings. Need moar children.
COPY tools/docker/php-fpm-pool.ini /usr/local/etc/php-fpm.d/zz-app.conf

# Override with custom opcache settings
#COPY config/opcache.ini $PHP_INI_DIR/conf.d/

# How do we run `php artisan migrate`?
# Route caching is all messy if you have closures.
# Config caching needs to happen at runtime so that we properly cache environment variables.
# Docker entrypoint maybe? Run config cache and then start php-fpm afterwards?

COPY tools/docker/app-entrypoint.sh /usr/local/bin/app-entrypoint
RUN chmod +x /usr/local/bin/app-entrypoint

ENTRYPOINT ["app-entrypoint"]
CMD ["app-entrypoint"]

